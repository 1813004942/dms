<?xml version="1.0" encoding="utf-8"?>
<util:MyModule xmlns:mx="http://www.adobe.com/2006/mxml"
			   xmlns:util="DMS_Util.*" layout="horizontal"
			   width="100%" height="100%" 
			   xmlns:bankcomm="http://www.bankcomm.com"
			   xmlns:components="com.bankcomm.dms.modules.category.components.*">
	<mx:Script>
		<![CDATA[
			import DMS_Util.ConnectParameter;
			import DMS_Util.ExtentedStringUtil;
			import DMS_Util.PaginationUtil;
			
			import com.adobe.utils.StringUtil;
			import com.bankcomm.Connect;
			import com.bankcomm.GuipPublic;
			import com.bankcomm.IModuleData;
			import com.bankcomm.ModuleData;
			import com.bankcomm.URLParameter;
			import com.bankcomm.dms.bo.CategoryBo;
			import com.bankcomm.dms.bo.SessionBO;
			import com.bankcomm.dms.cnst.InterfaceModeConst;
			import com.bankcomm.dms.modules.category.components.*;
			
			import mx.collections.ArrayCollection;
			import mx.controls.Alert;
			import mx.core.FlexGlobals;
			import mx.events.CloseEvent;
			import mx.events.DynamicEvent;
			import mx.events.ItemClickEvent;
			import mx.events.ListEvent;
			
			//系统菜单树数据源
			[Bindable]
			private var MenuArr:ArrayCollection = new ArrayCollection();
			
 			[Bindable]
			private var rootNode:Object; 
			
			[Bindable]
			private var parentId:int;
			
			/**
			 * 鼠标单击处理事件
			 * */
			private function itemClickHander(event:ItemClickEvent):void{
				switch (event.index){
					case 0:
						insertHandler();
						break;
					case 1:
						updateHandler();
						break;
					case 2:
						deleteHandler();
						break;
					case 3:
						break;
				}
			}
			
			/* this.addEventListener("refreshSubs",function():void{
				treeCom.subCategoryArr=
			} */
			
			//新增
			private function insertHandler():void{
				if(treeCom.currentNode != null 
					&& treeCom.currentNodeId < 0){
					Alert.show("请选择一条记录！","提示");
					return;
				}
				var insertCategory:CategoryInsert=new CategoryInsert();
				
				insertCategory.title="新增分类";
				
				insertCategory.parentId=treeCom.currentNodeId;
				insertCategory.parentName=treeCom.currentNode.categoryName;
				insertCategory.categoryPath=treeCom.currentNode.categoryPath;

				GuipPublic.popUp(insertCategory);
				
 /* 				insertCategory.addEventListener("refesh",function():void{
					treeCom.initRoot();
					dispatchEvent(new CloseEvent(CloseEvent.CLOSE));
				});   */

				
 				insertCategory.treeCat=treeCom; 
			}
			
			//修改
			private function updateHandler():void{
				if(treeCom.currentNode != null 
					&& treeCom.currentNodeId < 0){
					Alert.show("请选择一条记录！","提示");
					return;
				}
			
				var updateCategory:CategoryUpdate=new CategoryUpdate();
				
				updateCategory.title="修改分类";
				
				updateCategory.categoryId=treeCom.currentNodeId;
				updateCategory.categoryName=treeCom.currentNode.categoryName;
				updateCategory.categoryDesc=treeCom.currentNode.categoryDesc;
				updateCategory.isLeaf=treeCom.currentNode.isLeaf;
				updateCategory.parentId=treeCom.currentNode.parentId;
				updateCategory.categoryPath=treeCom.currentNode.categoryPath;
				updateCategory.categoryState=treeCom.currentNode.categoryState;
				
				GuipPublic.popUp(updateCategory);
				
  				updateCategory.treeCat=treeCom;  
 			}
			
			//删除项目
			private function deleteHandler():void{
				if(treeCom.currentNode != null 
					&& treeCom.currentNodeId < 0){
					Alert.show("请选择一条记录！","提示");
					return;
				}
				
				
				var deleteCategory:CategoryDelete=new CategoryDelete();
				deleteCategory.title="删除分类";
				deleteCategory.categoryId=treeCom.currentNodeId;
				deleteCategory.categoryName=treeCom.currentNode.categoryName;
				deleteCategory.categoryDesc=treeCom.currentNode.categoryDesc;

				//在弹出的新增分类窗口中显示当前分类的父类名称
				/**以下采取的方法是再去数据库里做一次请求**/
				parentId=treeCom.currentNode.parentId;
				
				var userId:int=treeCom.currentNode.modifyUser;
				deleteCategory.userId=userId;
				
				
				deleteCategory.parentId=parentId;
				
				if(parentId==0){
					deleteCategory.parentName=null;
				}
				else{
 					var params:URLParameter=new URLParameter();
					
					var reqBody:Object=new Object;
					reqBody["categoryId"]=parentId;
					params.reqBody=reqBody;
					Connect.request(new ConnectParameter(
						{
							url:"viewCategory.ajax"
							,params:params.toParameter()
							,callback:function(r:Object,e:Event):void{
								var rspBody:Object=r["RSP_BODY"];
								var categoryBo:CategoryBo=rspBody["result"];
								deleteCategory.parentName=categoryBo.categoryName;
							}
						}
					));
				}
				
				//给出要删除分类的父分类名
				
				GuipPublic.popUp(deleteCategory);
				
/* 				deleteCategory.addEventListener("refresh",function():void{
					treeCom.initRoot();
 					deleteCategory.dispatchEvent(new CloseEvent(CloseEvent.CLOSE)); 
				}); */
				
 				deleteCategory.treeCat=treeCom; 
			}
			
		]]>
	</mx:Script>
	
	<mx:Array id="btnDp">
		<mx:Object label="新增" icon="@Embed('assets/page_add.png')"/>
		<mx:Object label="修改" icon="@Embed('assets/page_edit.png')"/>
		<mx:Object label="删除" icon="@Embed('assets/page_delete.png')"/>
	</mx:Array>
	
	<mx:HBox height="100%" width="100%">
		<components:CategoryTree id="treeCom" width="100%" height="100%"/>
	</mx:HBox>
	<mx:VBox height="100%" width="100%">
		<mx:HBox>
			<mx:ButtonBar textAlign="center" id="bar" width="100%" dataProvider="{btnDp}"
						  itemClick="itemClickHander(event)"/>
		</mx:HBox>
		<!--<components:CategoryView/>-->
		<mx:DataGrid id="categoryGrid" width="100%" height="100%"
					 dataProvider="{treeCom.subCategoryArr}">
			<mx:columns>
				<mx:DataGridColumn dataField="categoryName" headerText="名称"/>
				<mx:DataGridColumn dataField="categoryPath" headerText="路径" visible="false"/>
				<mx:DataGridColumn dataField="modifyUser" headerText="创建人"/>
				<mx:DataGridColumn dataField="createTime" headerText="创建时间"/>
				<mx:DataGridColumn dataField="updateTime" headerText="更新时间"/>
				<mx:DataGridColumn dataField="categoryDesc" headerText="描述"/>
			</mx:columns>
		</mx:DataGrid>
	</mx:VBox>
</util:MyModule>
